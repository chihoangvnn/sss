"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_lib_lunarMockData_ts";
exports.ids = ["_ssr_src_lib_lunarMockData_ts"];
exports.modules = {

/***/ "(ssr)/./src/lib/lunarMockData.ts":
/*!**********************************!*\
  !*** ./src/lib/lunarMockData.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateMockLunarDay: () => (/* binding */ generateMockLunarDay),\n/* harmony export */   generateMockLunarMonth: () => (/* binding */ generateMockLunarMonth),\n/* harmony export */   mockApi: () => (/* binding */ mockApi)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! __barrel_optimize__?names=format!=!date-fns */ \"(ssr)/./node_modules/date-fns/format.js\");\n\n// Mock lunar calendar data for development\nconst CAN_CHI_DAYS = [\n    'Giáp Tý',\n    'Ất Sửu',\n    'Bính Dần',\n    'Đinh Mão',\n    'Mậu Thìn',\n    'Kỷ Tỵ',\n    'Canh Ngọ',\n    'Tân Mùi',\n    'Nhâm Thân',\n    'Quý Dậu',\n    'Giáp Tuất',\n    'Ất Hợi',\n    'Bính Tý',\n    'Đinh Sửu',\n    'Mậu Dần',\n    'Kỷ Mão',\n    'Canh Thìn',\n    'Tân Tỵ',\n    'Nhâm Ngọ',\n    'Quý Mùi',\n    'Giáp Thân',\n    'Ất Dậu',\n    'Bính Tuất',\n    'Đinh Hợi',\n    'Mậu Tý',\n    'Kỷ Sửu',\n    'Canh Dần',\n    'Tân Mão',\n    'Nhâm Thìn',\n    'Quý Tỵ',\n    'Giáp Ngọ',\n    'Ất Mùi',\n    'Bính Thân',\n    'Đinh Dậu',\n    'Mậu Tuất',\n    'Kỷ Hợi',\n    'Canh Tý',\n    'Tân Sửu',\n    'Nhâm Dần',\n    'Quý Mão',\n    'Giáp Thìn',\n    'Ất Tỵ',\n    'Bính Ngọ',\n    'Đinh Mùi',\n    'Mậu Thân',\n    'Kỷ Dậu',\n    'Canh Tuất',\n    'Tân Hợi',\n    'Nhâm Tý',\n    'Quý Sửu',\n    'Giáp Dần',\n    'Ất Mão',\n    'Bính Thìn',\n    'Đinh Tỵ',\n    'Mậu Ngọ',\n    'Kỷ Mùi',\n    'Canh Thân',\n    'Tân Dậu',\n    'Nhâm Tuất',\n    'Quý Hợi'\n];\nconst VIETNAMESE_HOLIDAYS = [\n    {\n        date: '01-01',\n        name: 'Tết Dương Lịch'\n    },\n    {\n        date: '15-01',\n        name: 'Tết Nguyên Tiêu (Âm lịch)'\n    },\n    {\n        date: '03-02',\n        name: 'Ngày Thành Lập Đảng'\n    },\n    {\n        date: '30-04',\n        name: 'Ngày Giải Phóng Miền Nam'\n    },\n    {\n        date: '01-05',\n        name: 'Ngày Quốc Tế Lao Động'\n    },\n    {\n        date: '02-09',\n        name: 'Ngày Quốc Khánh'\n    },\n    {\n        date: '20-11',\n        name: 'Ngày Nhà Giáo Việt Nam'\n    },\n    // Lunar holidays (approximate solar dates)\n    {\n        date: '10-02',\n        name: 'Tết Nguyên Đán (Âm lịch)'\n    },\n    {\n        date: '11-02',\n        name: 'Mồng 2 Tết'\n    },\n    {\n        date: '12-02',\n        name: 'Mồng 3 Tết'\n    },\n    {\n        date: '15-04',\n        name: 'Giỗ Tổ Hùng Vương'\n    },\n    {\n        date: '15-07',\n        name: 'Vu Lan (Âm lịch)'\n    },\n    {\n        date: '15-08',\n        name: 'Tết Trung Thu (Âm lịch)'\n    }\n];\nconst PRODUCT_SUGGESTIONS = [\n    // Good days suggestions\n    'Hương trầm tự nhiên cho ngày tốt',\n    'Nhang thảo mộc thanh tịnh',\n    'Tinh dầu hương nhu bình an',\n    'Trầm hương Khánh Hòa cao cấp',\n    'Nước hoa hồng tự nhiên',\n    'Gia vị thảo mộc thanh lọc',\n    // Normal days\n    'Nhang trầm hương hàng ngày',\n    'Tinh dầu thơm phòng',\n    'Hương que truyền thống',\n    'Sản phẩm thảo mộc thiên nhiên',\n    // Bad days suggestions (cleansing/purifying products)\n    'Nhang tẩy uế thanh tịnh',\n    'Tinh dầu bưởi thanh lọc',\n    'Hương trầm xua tà khí',\n    'Muối biển tự nhiên'\n];\n/**\n * Generate mock lunar day data\n */ function generateMockLunarDay(solarDate) {\n    const date = new Date(solarDate);\n    const dayIndex = Math.floor(date.getTime() / (1000 * 60 * 60 * 24)) % 60;\n    const canChi = CAN_CHI_DAYS[dayIndex];\n    // Generate lunar date (rough approximation)\n    const lunarDay = (date.getDate() + 10) % 30 + 1;\n    const lunarMonth = (date.getMonth() + 11) % 12 + 1;\n    const lunarYear = date.getFullYear() - (date.getMonth() < 2 ? 1 : 0);\n    // Determine day quality based on Can Chi\n    const goodDays = [\n        'Giáp Tý',\n        'Ất Sửu',\n        'Mậu Thìn',\n        'Kỷ Tỵ',\n        'Canh Ngọ',\n        'Tân Mùi'\n    ];\n    const badDays = [\n        'Nhâm Thân',\n        'Quý Dậu',\n        'Bính Tuất',\n        'Đinh Hợi'\n    ];\n    const dayQuality = goodDays.includes(canChi) ? 'good' : badDays.includes(canChi) ? 'bad' : 'normal';\n    // Check for holidays\n    const dateStr = (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(date, 'dd-MM');\n    const holiday = VIETNAMESE_HOLIDAYS.find((h)=>h.date === dateStr);\n    // Select product suggestions based on day quality (deterministic)\n    const dateHash = date.getTime() / (1000 * 60 * 60 * 24); // Days since epoch\n    const suggestions = PRODUCT_SUGGESTIONS.filter((_, index)=>{\n        if (dayQuality === 'good') return index < 6;\n        if (dayQuality === 'bad') return index >= 10;\n        return index >= 6 && index < 10;\n    }).slice(0, Math.floor(dateHash) % 3 + 1); // Deterministic slice based on date\n    return {\n        solarDate: solarDate.split('T')[0],\n        lunarDate: lunarDay,\n        lunarMonth: lunarMonth,\n        lunarYear: lunarYear,\n        canChi: canChi,\n        isGoodDay: dayQuality === 'good',\n        isHoliday: !!holiday,\n        holidayName: holiday?.name,\n        isToday: (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(date, 'yyyy-MM-dd') === (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(new Date(), 'yyyy-MM-dd'),\n        dayQuality: dayQuality,\n        productSuggestions: suggestions\n    };\n}\n/**\n * Generate mock lunar month data\n */ function generateMockLunarMonth(year, month) {\n    const startDate = new Date(year, month - 1, 1);\n    const endDate = new Date(year, month, 0);\n    const days = [];\n    for(let day = 1; day <= endDate.getDate(); day++){\n        const dateStr = (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(new Date(year, month - 1, day), 'yyyy-MM-dd');\n        days.push(generateMockLunarDay(dateStr));\n    }\n    return {\n        days,\n        monthInfo: {\n            lunarMonth: (month + 10) % 12 + 1,\n            lunarYear: year - (month < 3 ? 1 : 0),\n            canChiMonth: CAN_CHI_DAYS[(month - 1) % 12],\n            seasonContext: getSeason(month)\n        }\n    };\n}\n/**\n * Get season context for month\n */ function getSeason(month) {\n    if (month >= 3 && month <= 5) return 'Xuân - Mùa sinh trưởng, thích hợp trồng trọt';\n    if (month >= 6 && month <= 8) return 'Hạ - Mùa phát triển, năng lượng cao';\n    if (month >= 9 && month <= 11) return 'Thu - Mùa thu hoạch, tích trữ năng lượng';\n    return 'Đông - Mùa nghỉ ngơi, bảo tồn sức khỏe';\n}\n/**\n * Development mode API functions with mock data\n */ const mockApi = {\n    async fetchLunarMonth (year, month) {\n        // Simulate deterministic API delay in development only\n        if (true) {\n            const delay = 300 + (year + month) % 200; // Deterministic delay\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n        return generateMockLunarMonth(year, month);\n    },\n    async fetchLunarDay (date) {\n        // Simulate deterministic API delay in development only\n        if (true) {\n            const dateObj = new Date(date);\n            const delay = 200 + dateObj.getTime() % 200; // Deterministic delay\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n        return generateMockLunarDay(date);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/lunarMockData.ts\n");

/***/ })

};
;