"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useAuth.ts":
/*!******************************!*\
  !*** ./src/hooks/useAuth.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUnauthorizedError: () => (/* binding */ isUnauthorizedError),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n\n// Use Next.js API routes as proxy to backend for HTTPS compatibility\nconst API_BASE_URL = ''; // Empty string uses same origin (Next.js API routes)\nfunction useAuth() {\n    const { data: user, isLoading, error, refetch } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.useQuery)({\n        queryKey: [\n            'auth',\n            'user'\n        ],\n        queryFn: async ()=>{\n            try {\n                const response = await fetch(\"\".concat(API_BASE_URL, \"/api/auth/user\"), {\n                    method: 'GET',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                if (!response.ok) {\n                    if (response.status === 401) {\n                        return null; // User not authenticated\n                    }\n                    throw new Error(\"Failed to fetch user: \".concat(response.status));\n                }\n                return response.json();\n            } catch (error) {\n                console.log('Auth check failed:', error);\n                return null; // Fail silently, user not authenticated\n            }\n        },\n        retry: false,\n        staleTime: 5 * 60 * 1000\n    });\n    // OAuth login functions matching API specification\n    const loginWithReplit = ()=>{\n        window.location.href = '/auth/replit';\n    };\n    const loginWithFacebook = ()=>{\n        window.location.href = '/auth/facebook';\n    };\n    // Legacy login function for backward compatibility\n    const login = ()=>{\n        window.location.href = '/auth/replit';\n    };\n    const logout = ()=>{\n        window.location.href = \"\".concat(API_BASE_URL, \"/api/logout\");\n    };\n    // CSRF token helper for protected APIs\n    const getCsrfToken = async ()=>{\n        try {\n            const response = await fetch('/api/facebook-apps/csrf-token', {\n                credentials: 'include'\n            });\n            if (response.ok) {\n                const data = await response.json();\n                return data.csrfToken;\n            }\n        } catch (error) {\n            console.error('Failed to get CSRF token:', error);\n        }\n        return null;\n    };\n    // Session check helper matching specification\n    const checkAuthStatus = async ()=>{\n        try {\n            const response = await fetch('/api/dashboard/stats', {\n                credentials: 'include'\n            });\n            if (response.status === 401) {\n                // Not logged in, redirect to OAuth\n                window.location.href = '/auth/replit';\n                return false;\n            }\n            return true;\n        } catch (error) {\n            console.error('Auth status check failed:', error);\n            return false;\n        }\n    };\n    return {\n        user: user || null,\n        isLoading,\n        isAuthenticated: !!user,\n        login,\n        loginWithReplit,\n        loginWithFacebook,\n        logout,\n        refetch,\n        getCsrfToken,\n        checkAuthStatus,\n        error\n    };\n}\nfunction isUnauthorizedError(error) {\n    return /^401: .*Unauthorized/.test(error.message);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VBdXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUVqRCxxRUFBcUU7QUFDckUsTUFBTUMsZUFBZSxJQUFJLHFEQUFxRDtBQVl2RSxTQUFTQztJQUNkLE1BQU0sRUFBRUMsTUFBTUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFLEdBQUdQLCtEQUFRQSxDQUFPO1FBQy9EUSxVQUFVO1lBQUM7WUFBUTtTQUFPO1FBQzFCQyxTQUFTO1lBQ1AsSUFBSTtnQkFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sR0FBZ0IsT0FBYlYsY0FBYSxtQkFBaUI7b0JBQzVEVyxRQUFRO29CQUNSQyxhQUFhO29CQUNiQyxTQUFTO3dCQUNQLGdCQUFnQjtvQkFDbEI7Z0JBQ0Y7Z0JBRUEsSUFBSSxDQUFDSixTQUFTSyxFQUFFLEVBQUU7b0JBQ2hCLElBQUlMLFNBQVNNLE1BQU0sS0FBSyxLQUFLO3dCQUMzQixPQUFPLE1BQU0seUJBQXlCO29CQUN4QztvQkFDQSxNQUFNLElBQUlDLE1BQU0seUJBQXlDLE9BQWhCUCxTQUFTTSxNQUFNO2dCQUMxRDtnQkFFQSxPQUFPTixTQUFTUSxJQUFJO1lBQ3RCLEVBQUUsT0FBT1osT0FBTztnQkFDZGEsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQmQ7Z0JBQ2xDLE9BQU8sTUFBTSx3Q0FBd0M7WUFDdkQ7UUFDRjtRQUNBZSxPQUFPO1FBQ1BDLFdBQVcsSUFBSSxLQUFLO0lBQ3RCO0lBRUEsbURBQW1EO0lBQ25ELE1BQU1DLGtCQUFrQjtRQUN0QkMsT0FBT0MsUUFBUSxDQUFDQyxJQUFJLEdBQUc7SUFDekI7SUFFQSxNQUFNQyxvQkFBb0I7UUFDeEJILE9BQU9DLFFBQVEsQ0FBQ0MsSUFBSSxHQUFHO0lBQ3pCO0lBRUEsbURBQW1EO0lBQ25ELE1BQU1FLFFBQVE7UUFDWkosT0FBT0MsUUFBUSxDQUFDQyxJQUFJLEdBQUc7SUFDekI7SUFFQSxNQUFNRyxTQUFTO1FBQ2JMLE9BQU9DLFFBQVEsQ0FBQ0MsSUFBSSxHQUFHLEdBQWdCLE9BQWJ6QixjQUFhO0lBQ3pDO0lBRUEsdUNBQXVDO0lBQ3ZDLE1BQU02QixlQUFlO1FBQ25CLElBQUk7WUFDRixNQUFNcEIsV0FBVyxNQUFNQyxNQUFNLGlDQUFpQztnQkFDNURFLGFBQWE7WUFDZjtZQUNBLElBQUlILFNBQVNLLEVBQUUsRUFBRTtnQkFDZixNQUFNWixPQUFPLE1BQU1PLFNBQVNRLElBQUk7Z0JBQ2hDLE9BQU9mLEtBQUs0QixTQUFTO1lBQ3ZCO1FBQ0YsRUFBRSxPQUFPekIsT0FBTztZQUNkYSxRQUFRYixLQUFLLENBQUMsNkJBQTZCQTtRQUM3QztRQUNBLE9BQU87SUFDVDtJQUVBLDhDQUE4QztJQUM5QyxNQUFNMEIsa0JBQWtCO1FBQ3RCLElBQUk7WUFDRixNQUFNdEIsV0FBVyxNQUFNQyxNQUFNLHdCQUF3QjtnQkFDbkRFLGFBQWE7WUFDZjtZQUNBLElBQUlILFNBQVNNLE1BQU0sS0FBSyxLQUFLO2dCQUMzQixtQ0FBbUM7Z0JBQ25DUSxPQUFPQyxRQUFRLENBQUNDLElBQUksR0FBRztnQkFDdkIsT0FBTztZQUNUO1lBQ0EsT0FBTztRQUNULEVBQUUsT0FBT3BCLE9BQU87WUFDZGEsUUFBUWIsS0FBSyxDQUFDLDZCQUE2QkE7WUFDM0MsT0FBTztRQUNUO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xGLE1BQU1BLFFBQVE7UUFDZEM7UUFDQTRCLGlCQUFpQixDQUFDLENBQUM3QjtRQUNuQndCO1FBQ0FMO1FBQ0FJO1FBQ0FFO1FBQ0F0QjtRQUNBdUI7UUFDQUU7UUFDQTFCO0lBQ0Y7QUFDRjtBQUVPLFNBQVM0QixvQkFBb0I1QixLQUFZO0lBQzlDLE9BQU8sdUJBQXVCNkIsSUFBSSxDQUFDN0IsTUFBTThCLE9BQU87QUFDbEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2hvb2tzL3VzZUF1dGgudHM/M2MxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIjtcblxuLy8gVXNlIE5leHQuanMgQVBJIHJvdXRlcyBhcyBwcm94eSB0byBiYWNrZW5kIGZvciBIVFRQUyBjb21wYXRpYmlsaXR5XG5jb25zdCBBUElfQkFTRV9VUkwgPSAnJzsgLy8gRW1wdHkgc3RyaW5nIHVzZXMgc2FtZSBvcmlnaW4gKE5leHQuanMgQVBJIHJvdXRlcylcblxuZXhwb3J0IGludGVyZmFjZSBVc2VyIHtcbiAgaWQ6IHN0cmluZztcbiAgZW1haWw/OiBzdHJpbmc7XG4gIGZpcnN0TmFtZT86IHN0cmluZztcbiAgbGFzdE5hbWU/OiBzdHJpbmc7XG4gIHByb2ZpbGVJbWFnZVVybD86IHN0cmluZztcbiAgY3JlYXRlZEF0Pzogc3RyaW5nO1xuICB1cGRhdGVkQXQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBdXRoKCkge1xuICBjb25zdCB7IGRhdGE6IHVzZXIsIGlzTG9hZGluZywgZXJyb3IsIHJlZmV0Y2ggfSA9IHVzZVF1ZXJ5PFVzZXI+KHtcbiAgICBxdWVyeUtleTogWydhdXRoJywgJ3VzZXInXSxcbiAgICBxdWVyeUZuOiBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9CQVNFX1VSTH0vYXBpL2F1dGgvdXNlcmAsIHtcbiAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgIGNyZWRlbnRpYWxzOiAnaW5jbHVkZScsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsOyAvLyBVc2VyIG5vdCBhdXRoZW50aWNhdGVkXG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIHVzZXI6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0F1dGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIG51bGw7IC8vIEZhaWwgc2lsZW50bHksIHVzZXIgbm90IGF1dGhlbnRpY2F0ZWRcbiAgICAgIH1cbiAgICB9LFxuICAgIHJldHJ5OiBmYWxzZSwgLy8gRG9uJ3QgcmV0cnkgYXV0aCByZXF1ZXN0c1xuICAgIHN0YWxlVGltZTogNSAqIDYwICogMTAwMCwgLy8gQ2FjaGUgZm9yIDUgbWludXRlc1xuICB9KTtcblxuICAvLyBPQXV0aCBsb2dpbiBmdW5jdGlvbnMgbWF0Y2hpbmcgQVBJIHNwZWNpZmljYXRpb25cbiAgY29uc3QgbG9naW5XaXRoUmVwbGl0ID0gKCkgPT4ge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9hdXRoL3JlcGxpdCc7XG4gIH07XG5cbiAgY29uc3QgbG9naW5XaXRoRmFjZWJvb2sgPSAoKSA9PiB7XG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2F1dGgvZmFjZWJvb2snO1xuICB9O1xuXG4gIC8vIExlZ2FjeSBsb2dpbiBmdW5jdGlvbiBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuICBjb25zdCBsb2dpbiA9ICgpID0+IHtcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvYXV0aC9yZXBsaXQnO1xuICB9O1xuXG4gIGNvbnN0IGxvZ291dCA9ICgpID0+IHtcbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAke0FQSV9CQVNFX1VSTH0vYXBpL2xvZ291dGA7XG4gIH07XG5cbiAgLy8gQ1NSRiB0b2tlbiBoZWxwZXIgZm9yIHByb3RlY3RlZCBBUElzXG4gIGNvbnN0IGdldENzcmZUb2tlbiA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9mYWNlYm9vay1hcHBzL2NzcmYtdG9rZW4nLCB7XG4gICAgICAgIGNyZWRlbnRpYWxzOiAnaW5jbHVkZScsXG4gICAgICB9KTtcbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICByZXR1cm4gZGF0YS5jc3JmVG9rZW47XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBnZXQgQ1NSRiB0b2tlbjonLCBlcnJvcik7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIC8vIFNlc3Npb24gY2hlY2sgaGVscGVyIG1hdGNoaW5nIHNwZWNpZmljYXRpb25cbiAgY29uc3QgY2hlY2tBdXRoU3RhdHVzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2Rhc2hib2FyZC9zdGF0cycsIHtcbiAgICAgICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgICAgIH0pO1xuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgIC8vIE5vdCBsb2dnZWQgaW4sIHJlZGlyZWN0IHRvIE9BdXRoXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9hdXRoL3JlcGxpdCc7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdBdXRoIHN0YXR1cyBjaGVjayBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHVzZXI6IHVzZXIgfHwgbnVsbCxcbiAgICBpc0xvYWRpbmcsXG4gICAgaXNBdXRoZW50aWNhdGVkOiAhIXVzZXIsXG4gICAgbG9naW4sXG4gICAgbG9naW5XaXRoUmVwbGl0LFxuICAgIGxvZ2luV2l0aEZhY2Vib29rLFxuICAgIGxvZ291dCxcbiAgICByZWZldGNoLFxuICAgIGdldENzcmZUb2tlbixcbiAgICBjaGVja0F1dGhTdGF0dXMsXG4gICAgZXJyb3JcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVW5hdXRob3JpemVkRXJyb3IoZXJyb3I6IEVycm9yKTogYm9vbGVhbiB7XG4gIHJldHVybiAvXjQwMTogLipVbmF1dGhvcml6ZWQvLnRlc3QoZXJyb3IubWVzc2FnZSk7XG59Il0sIm5hbWVzIjpbInVzZVF1ZXJ5IiwiQVBJX0JBU0VfVVJMIiwidXNlQXV0aCIsImRhdGEiLCJ1c2VyIiwiaXNMb2FkaW5nIiwiZXJyb3IiLCJyZWZldGNoIiwicXVlcnlLZXkiLCJxdWVyeUZuIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImNyZWRlbnRpYWxzIiwiaGVhZGVycyIsIm9rIiwic3RhdHVzIiwiRXJyb3IiLCJqc29uIiwiY29uc29sZSIsImxvZyIsInJldHJ5Iiwic3RhbGVUaW1lIiwibG9naW5XaXRoUmVwbGl0Iiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwibG9naW5XaXRoRmFjZWJvb2siLCJsb2dpbiIsImxvZ291dCIsImdldENzcmZUb2tlbiIsImNzcmZUb2tlbiIsImNoZWNrQXV0aFN0YXR1cyIsImlzQXV0aGVudGljYXRlZCIsImlzVW5hdXRob3JpemVkRXJyb3IiLCJ0ZXN0IiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useAuth.ts\n"));

/***/ })

});